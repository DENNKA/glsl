// buffer feedback hack
 
#ifdef GL_ES
precision highp float;
#endif

uniform float time;
uniform vec2 mouse;
uniform vec2 resolution;
uniform sampler2D backbuffer;

vec4 gPixelRandom;

void CalcPixelRandom()
{
	// Nothing special here, just numbers generated by bashing keyboard
	vec4 s1 = sin(time * 3.3422 + gl_FragCoord.xxxx * vec4(24.324234, 563.324234, 657.324234, 764.324234)) * 543.3423;
	vec4 s2 = sin(time * 1.3422 + gl_FragCoord.yyyy * vec4(567.324234, 435.324234, 432.324234, 657.324234)) * 654.5423;
	gPixelRandom = fract(2142.4 + s1 + s2);
}


vec3 Gamma( const in vec3 cCol )
{
	return cCol * cCol;
}

vec3 InvGamma( const in vec3 cCol )
{
	return sqrt(cCol);
}


vec3 Tonemap( const in vec3 cCol )
{
	// simple Reinhard tonemapping operator     
	vec3 vResult = cCol / (1.0 + cCol);

	return Gamma(vResult);
}

vec3 InvTonemap( const in vec3 cCol )
{
	vec3 vResult = cCol;
	vResult = clamp(vResult, 0.01, 0.99);
	vResult = InvGamma(vResult);
	return - (vResult / (vResult - 1.0));
}

void main( void )
{
	float invdist = length(floor(gl_FragCoord.xy / resolution * 32.0) - floor(mouse * 32.0));
	float mdist = invdist > 0.0 ? 1.0 / invdist : 1.0;
	vec2 edge = fract(gl_FragCoord.xy / resolution * 32.0 + 0.5);
	vec2 f = edge * (vec2(1.0,1.0) - edge);
	float g = (max(f.x,f.y));
	
	mdist *= 64.0 * g * sqrt(g);
	vec3 cScene = 1.0 * vec3(3,1,0) * (mdist * mdist);
       
	vec3 cPrev = 9.0 * texture2D(backbuffer, gl_FragCoord.xy / resolution).xyz;
	//cPrev += 1.0 * texture2D(backbuffer, gl_FragCoord.xy / resolution + vec2(0.1,0)).xyz;
	//cPrev += 1.0 * texture2D(backbuffer, gl_FragCoord.xy / resolution + vec2(-0.1,0)).xyz;
	
	//cPrev += 1.0 * texture2D(backbuffer, gl_FragCoord.xy / resolution + vec2(0,0.1)).xyz;
	//cPrev += 1.0 * texture2D(backbuffer, gl_FragCoord.xy / resolution + vec2(0, -0.1)).xyz;
	cPrev /= 9.0;
	// add noise to pixel value (helps values converge)
	cPrev += (gPixelRandom.xyz - 0.5) * (1.0 / 255.0);
	cPrev = InvTonemap(cPrev);
	// converge speed
	float fBlend = 0.01;
	vec3 cFinal = mix(cPrev, cScene, fBlend);
	
	cFinal = Tonemap(cFinal);
       	
	float fAlpha = 1.0;
       
	gl_FragColor = vec4( cFinal, fAlpha );
}