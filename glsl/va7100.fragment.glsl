#ifdef GL_ES
precision mediump float;
#endif

uniform float time;
uniform vec2 mouse;
uniform vec2 resolution;

vec3 c_0 = vec3(0., 0., 0.);
vec3 c_1 = vec3(254.999999878 / 255.0, 254.999999878 / 255.0, 254.999999878 / 255.0);
vec3 c_2 = vec3(103.681836072 / 255.0,  55.445357742 / 255.0,  43.038096345 / 255.0);
vec3 c_3 = vec3(111.932673473 / 255.0, 163.520631667 / 255.0, 177.928819803 / 255.0);
vec3 c_4 = vec3(111.399725075 / 255.0,  60.720543693 / 255.0, 133.643433983 / 255.0);
vec3 c_5 = vec3( 88.102223525 / 255.0, 140.581101312 / 255.0,  67.050415368 / 255.0);
vec3 c_6 = vec3( 52.769271594 / 255.0,  40.296416104 / 255.0, 121.446211753 / 255.0);
vec3 c_7 = vec3(183.892638117 / 255.0, 198.676829993 / 255.0, 110.585717385 / 255.0);
vec3 c_8 = vec3(111.399725075 / 255.0,  79.245328562 / 255.0,  37.169652483 / 255.0);
vec3 c_9 = vec3( 66.932804788 / 255.0,  57.383702891 / 255.0,   0.0         / 255.0);
vec3 c_a = vec3(153.690586380 / 255.0, 102.553762644 / 255.0,  89.111118307 / 255.0);
vec3 c_b = vec3( 67.999561813 / 255.0,  67.999561813 / 255.0,  67.999561813 / 255.0);
vec3 c_c = vec3(107.797780127 / 255.0, 107.797780127 / 255.0, 107.797780127 / 255.0);
vec3 c_d = vec3(154.244479632 / 255.0, 209.771445903 / 255.0, 131.584994128 / 255.0);
vec3 c_e = vec3(107.797780127 / 255.0,  94.106015515 / 255.0, 180.927622164 / 255.0);
vec3 c_f = vec3(149.480882981 / 255.0, 149.480882981 / 255.0, 149.480882981 / 255.0);


void main( void ) {
	vec2 pos = resolution.xy - gl_FragCoord.xy;
	vec2 position = vec2(0.0, 1.0) - ( gl_FragCoord.xy / resolution.xy );

	vec3 bla[18];
	bla[0] = c_9;
	bla[1] = c_9;
	bla[2] = c_8;
	bla[3] = c_8;
	bla[4] = c_a;
	bla[5] = c_a;
	bla[6] = c_7;
	bla[7] = c_1;
	bla[8] = c_1;
	bla[9] = c_1;
	bla[10] = c_1;
	bla[11] = c_7;
	bla[12] = c_a;
	bla[13] = c_a;
	bla[14] = c_8;
	bla[15] = c_8;
	bla[16] = c_9;
	bla[17] = c_9;

	vec3 c = c_0;
	for (int i=0; i<18; i++) {
		for (int n=0; n<12; n++) {
			float start = ((sin(time - float(n)*0.25) + 1.0) / 2.0) * (resolution.y - 18.);
			if ((pos.y >= (start + float(i)       )) &&
			    (pos.y <  (start + float(i) + 1.0))) {
				c = bla[i];
			}
		}
	}
	gl_FragColor = vec4(c, 1.0);
}